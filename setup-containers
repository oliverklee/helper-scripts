#!/bin/bash

# Installs Docker CE and Docker Compose.

source 'output.sh'

echo 'Installing Docker CE …'
PACKAGE_REPORT=$(dpkg -s docker-ce)
if echo "$PACKAGE_REPORT" | grep -q 'install ok installed'; then
  success 'Already installed.';
else
  echo 'Removing old Docker versions …'
  sudo-get apt purge docker docker-engine docker.io 2>/dev/null
  sudo apt-get update
  sudo apt-get install -y --no-install-recommends --no-install-suggests ca-certificates curl gnupg

  echo 'Setting up repository …'
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  sudo chmod a+r /etc/apt/keyrings/docker.gpg
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "${VERSION_CODENAME}") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  echo 'Installing Docker CE and Docker Compose …'
  sudo apt-get update
  sudo apt-get install -y \
    containerd.io \
    docker-buildx-plugin \
    docker-ce \
    docker-ce-cli \
    docker-compose \
    docker-compose-plugin

  echo 'Fixing permissions …'
  sudo groupadd docker
  sudo usermod -aG docker "${USER}"
  success 'Done.'
  echo 'Please restart your computer for the new permissions to take effect. (Logging out and back in is not enough.)'
fi
linefeed

echo 'Preventing conflicts between Podman and Docker …'
BASH_CONFIGURATION_FILE=~/.bashrc
touch "${BASH_CONFIGURATION_FILE}"
if grep -q 'DOCKER_HOST' "${BASH_CONFIGURATION_FILE}"; then
  success 'Already set up.';
else
  {
    echo ''
    echo '# Prevent Podman from interfering with DDEV'
    echo "unset DOCKER_HOST"
  } >> "${BASH_CONFIGURATION_FILE}"
  success 'Done.'
fi
