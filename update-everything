#!/bin/bash

# Updates all DEB packages and snaps.

source 'output.sh'

echo 'Updating DEB packages …'
sudo aptitude update
sudo aptitude dist-upgrade -y
sudo aptitude clean
success 'Done.'
linefeed

echo 'Updating snaps …'
sudo snap refresh
success 'Done.'
linefeed

echo 'Updating Flatpak packages …'
PACKAGE_REPORT=$(dpkg -s flatpak)
if echo "${PACKAGE_REPORT}" | grep -q 'install ok installed'; then
  sudo flatpak update -y
else
  echo 'Not installed.';
fi
linefeed

PATH_REPORT=$(which gem)
if echo "$PATH_REPORT" | grep -q 'gem'; then
  echo 'Updating dip …'
  GEM_REPORT=$(gem search --local '^dip$')
  if echo "${GEM_REPORT}" | grep -q 'dip '; then
    gem update dip --user-install;
    success 'Done.'
  else
    echo 'Not installed.';
  fi
  linefeed
fi

echo 'Updating Zoom …'
PACKAGE_REPORT=$(dpkg -s zoom)
if echo "${PACKAGE_REPORT}" | grep -q 'install ok installed'; then
  source 'update-zoom.sh'
else
  echo 'Not installed.';
fi
linefeed

echo 'Updating Composer …'
COMPOSER_REPORT=$(which composer)
if echo "${COMPOSER_REPORT}" | grep -q '/composer'; then
  composer selfupdate;
  success 'Done.'
else
  echo 'Not installed.';
fi
linefeed

echo 'Updating PHIVE …'
PHIVE_REPORT=$(which phive)
if echo "${PHIVE_REPORT}" | grep -q '/phive'; then
  phive selfupdate;
  success 'Done.'
else
  echo 'Not installed.';
fi
linefeed

echo 'Updating the Heroku CLU …'
HEROKU_REPORT=$(which heroku)
if echo "${HEROKU_REPORT}" | grep -q '/bin/heroku'; then
  heroku update;
  success 'Done.'
else
  echo 'Not installed.';
fi
